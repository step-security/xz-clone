# SPDX-License-Identifier: 0BSD

#############################################################################
#
# Author: Jia Tan
#
#############################################################################

name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:

  pull_request:
    branches: [master]

  # Allows running workflow manually
  workflow_dispatch:

permissions: # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  POSIX:
    strategy:
      matrix:
        os: [ubuntu-latest]
        build_system: [autotools, cmake]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 #v4.1.0

      ########################
      # Install Dependencies #
      ########################

      # Install Autotools on Linux
      - name: Install Dependencies
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.build_system == 'autotools' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake build-essential po4a autopoint gcc-multilib doxygen musl-tools

      # Install Autotools on Mac
      - name: Install Dependencies
        if: ${{ matrix.os == 'macos-latest' && matrix.build_system == 'autotools' }}
        run: brew install autoconf automake libtool po4a doxygen

      # Install CMake on Linux
      - name: Install Dependencies
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.build_system == 'cmake' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake musl-tools

      # Install CMake on Mac
      - name: Install Dependencies
        if: ${{ matrix.os == 'macos-latest' && matrix.build_system == 'cmake' }}
        run: brew install cmake

      ##################
      # Build and Test #
      ##################

      # -b specifies the build system to use.
      # -p specifies the phase (build or test) to help narrow down an error
      #    if one occurs.
      #
      # The first two builds/tests are only run on Autotools Linux and
      # affect the CFLAGS. Resetting the CFLAGS requires clearing the
      # config cache between runs, so the tests that require CFLAGS are
      # done first.
      - name: Build
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.build_system == 'autotools' }}
        run: ./configure && make && make check && make install
